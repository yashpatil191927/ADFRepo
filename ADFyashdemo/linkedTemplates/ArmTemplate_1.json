{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFyashdemo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Validationpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validation1",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Inputdataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "7.00:00:00",
							"sleep": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-17T13:43:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmpDepdataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Employeedataset",
								"type": "DatasetReference"
							},
							"name": "Employeedata"
						},
						{
							"dataset": {
								"referenceName": "Departmentdataset",
								"type": "DatasetReference"
							},
							"name": "Departmentdata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OutputEmpDep",
								"type": "DatasetReference"
							},
							"name": "OuputOfEmpDep"
						}
					],
					"transformations": [
						{
							"name": "joinEmpOndept"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Empid as string,",
						"          Name as string,",
						"          Country as string,",
						"          Dept as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Employeedata",
						"source(output(",
						"          Depid as string,",
						"          Depname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Departmentdata",
						"Employeedata, Departmentdata join(Dept == Depid,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinEmpOndept",
						"joinEmpOndept sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          Empid,",
						"          Name,",
						"          Country,",
						"          Dept,",
						"          Depname",
						"     )) ~> OuputOfEmpDep"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Filterpayrollemp')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Employeedataset",
								"type": "DatasetReference"
							},
							"name": "Employee"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OutputEmpDep",
								"type": "DatasetReference"
							},
							"name": "payrollEmpoutput"
						}
					],
					"transformations": [
						{
							"name": "Filterpayroll"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Empid as string,",
						"          Name as string,",
						"          Country as string,",
						"          Dept as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Employee",
						"Employee filter(equals(Dept, '3')) ~> Filterpayroll",
						"Filterpayroll sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['PayrollEmp.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> payrollEmpoutput"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TotalempbyDeptdataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Employeedataset",
								"type": "DatasetReference"
							},
							"name": "employee"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OutputEmpDep",
								"type": "DatasetReference"
							},
							"name": "TotalEmpbyDept"
						}
					],
					"transformations": [
						{
							"name": "AggreateonDept"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Empid as string,",
						"          Name as string,",
						"          Country as string,",
						"          Dept as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> employee",
						"employee aggregate(groupBy(Dept),",
						"     {Total employees} = count(Empid)) ~> AggreateonDept",
						"AggreateonDept sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['TotalEmpbyDept.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          DepartmentID = Dept,",
						"          {Total employees}",
						"     ),",
						"     partitionBy('hash', 1)) ~> TotalEmpbyDept"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Aggregate dataflow pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TotalempbyDeptdataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"employee": {},
									"TotalEmpbyDept": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-19T08:59:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TotalempbyDeptdataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataflowpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Emp-DepDataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EmpDepdataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Employeedata": {},
									"Departmentdata": {},
									"OuputOfEmpDep": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-19T07:49:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/EmpDepdataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Filterdata flowpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "filterdataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Filterpayrollemp",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Employee": {},
									"payrollEmpoutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-19T08:20:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Filterpayrollemp')]"
			]
		}
	]
}